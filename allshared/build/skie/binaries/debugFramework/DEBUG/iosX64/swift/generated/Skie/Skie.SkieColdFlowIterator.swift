// Generated by Touchlab SKIE 0.10.0

import Foundation

extension allshared.Skie.RuntimeKotlin.SkieColdFlowIterator {

    public struct __Suspend<E : Swift.AnyObject> {

        public let __kotlinObject: allshared.SkieColdFlowIterator<E>

        public init(_ __kotlinObject: allshared.SkieColdFlowIterator<E>) {
            self.__kotlinObject = __kotlinObject
        }

    }

}

public func skie<E : Swift.AnyObject>(_ kotlinObject: allshared.SkieColdFlowIterator<E>) -> allshared.Skie.RuntimeKotlin.SkieColdFlowIterator.__Suspend<E> {
    return allshared.Skie.RuntimeKotlin.SkieColdFlowIterator.__Suspend(kotlinObject)
}

extension allshared.Skie.RuntimeKotlin.SkieColdFlowIterator.__Suspend {

    @available(iOS 13, macOS 10.15, watchOS 6, tvOS 13, *)
    public func hasNext() async throws -> allshared.KotlinBoolean {
        return try await SwiftCoroutineDispatcher.dispatch {
            allshared.__SkieSuspendWrappersKt.Skie_Suspend__0__hasNext(dispatchReceiver: __kotlinObject as! allshared.SkieColdFlowIterator<Swift.AnyObject>, suspendHandler: $0)
        }
    }

}
