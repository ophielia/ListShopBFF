// Generated by Touchlab SKIE 0.10.0

import Foundation

@frozen
public enum ListshopBFFErrorSubtype : Swift.Hashable, Swift.CaseIterable,
        Swift._ObjectiveCBridgeable {

    case cantLogin
    case cantConnect
    case unknown

    public var name: Swift.String {
        return (self as _ObjectiveCType).name
    }

    public var ordinal: Swift.Int32 {
        return (self as _ObjectiveCType).ordinal
    }

    public static func _forceBridgeFromObjectiveC(_ source: allshared.__ListshopBFFErrorSubtype, result: inout allshared.ListshopBFFErrorSubtype?) -> Swift.Void {
        result = fromObjectiveC(source)
    }

    public static func _conditionallyBridgeFromObjectiveC(_ source: allshared.__ListshopBFFErrorSubtype, result: inout allshared.ListshopBFFErrorSubtype?) -> Swift.Bool {
        result = fromObjectiveC(source)
        return true
    }

    public static func _unconditionallyBridgeFromObjectiveC(_ source: allshared.__ListshopBFFErrorSubtype?) -> Self {
        return fromObjectiveC(source)
    }

    public func _bridgeToObjectiveC() -> allshared.__ListshopBFFErrorSubtype {
        switch self {
        case .cantLogin: return allshared.__ListshopBFFErrorSubtype.cantLogin as allshared.__ListshopBFFErrorSubtype
        case .cantConnect: return allshared.__ListshopBFFErrorSubtype.cantConnect as allshared.__ListshopBFFErrorSubtype
        case .unknown: return allshared.__ListshopBFFErrorSubtype.unknown as allshared.__ListshopBFFErrorSubtype
        }
    }

    private static func fromObjectiveC(_ source: allshared.__ListshopBFFErrorSubtype?) -> Self {
        guard let source = source else {
            fatalError("Couldn't map value of \(Swift.String(describing: source)) to allshared.ListshopBFFErrorSubtype")
        }
        if source == allshared.__ListshopBFFErrorSubtype.cantLogin as allshared.__ListshopBFFErrorSubtype {
            return .cantLogin
        } else if source == allshared.__ListshopBFFErrorSubtype.cantConnect as allshared.__ListshopBFFErrorSubtype {
            return .cantConnect
        } else if source == allshared.__ListshopBFFErrorSubtype.unknown as allshared.__ListshopBFFErrorSubtype {
            return .unknown
        } else {
            fatalError("Couldn't map value of \(Swift.String(describing: source)) to allshared.__ListshopBFFErrorSubtype")
        }
    }

    public typealias _ObjectiveCType = allshared.__ListshopBFFErrorSubtype

}

extension allshared.ListshopBFFErrorSubtype {

    public func toKotlinEnum() -> allshared.__ListshopBFFErrorSubtype {
        return _bridgeToObjectiveC()
    }

}

extension allshared.__ListshopBFFErrorSubtype {

    public func toSwiftEnum() -> allshared.ListshopBFFErrorSubtype {
        return allshared.ListshopBFFErrorSubtype._unconditionallyBridgeFromObjectiveC(self)
    }

}
