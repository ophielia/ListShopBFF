// Generated by Touchlab SKIE 0.10.0

import Foundation

extension allshared.Skie.Listshop.TransitionViewState {

    @frozen
    public enum __Sealed : Swift.Hashable {

        case dashboard(allshared.ListshopTransitionViewState.Dashboard)
        case launching(allshared.ListshopTransitionViewState.Launching)
        case listManagementScreen(allshared.ListshopTransitionViewState.ListManagementScreen)
        case onboarding(allshared.ListshopTransitionViewState.Onboarding)

    }

}

public func onEnum<__Sealed : allshared.ListshopTransitionViewState>(of sealed: __Sealed) -> allshared.Skie.Listshop.TransitionViewState.__Sealed {
    if let sealed = sealed as? allshared.ListshopTransitionViewState.Dashboard {
        return allshared.Skie.Listshop.TransitionViewState.__Sealed.dashboard(sealed)
    } else if let sealed = sealed as? allshared.ListshopTransitionViewState.Launching {
        return allshared.Skie.Listshop.TransitionViewState.__Sealed.launching(sealed)
    } else if let sealed = sealed as? allshared.ListshopTransitionViewState.ListManagementScreen {
        return allshared.Skie.Listshop.TransitionViewState.__Sealed.listManagementScreen(sealed)
    } else if let sealed = sealed as? allshared.ListshopTransitionViewState.Onboarding {
        return allshared.Skie.Listshop.TransitionViewState.__Sealed.onboarding(sealed)
    } else {
        fatalError("Unknown subtype \(sealed). This error should not happen under normal circumstances since SirClass: allshared.ListshopTransitionViewState is sealed.")
    }
}

@_disfavoredOverload
public func onEnum<__Sealed : allshared.ListshopTransitionViewState>(of sealed: __Sealed?) -> allshared.Skie.Listshop.TransitionViewState.__Sealed? {
    if let sealed {
        return onEnum(of: sealed) as allshared.Skie.Listshop.TransitionViewState.__Sealed
    } else {
        return nil
    }
}
