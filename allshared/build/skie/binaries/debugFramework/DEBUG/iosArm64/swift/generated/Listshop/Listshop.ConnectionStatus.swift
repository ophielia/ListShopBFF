// Generated by Touchlab SKIE 0.10.0

import Foundation

@frozen
public enum ListshopConnectionStatus : Swift.Hashable, Swift.CaseIterable,
        Swift._ObjectiveCBridgeable {

    case online
    case offline
    case unknown

    public var name: Swift.String {
        return (self as _ObjectiveCType).name
    }

    public var ordinal: Swift.Int32 {
        return (self as _ObjectiveCType).ordinal
    }

    public static func _forceBridgeFromObjectiveC(_ source: allshared.__ListshopConnectionStatus, result: inout allshared.ListshopConnectionStatus?) -> Swift.Void {
        result = fromObjectiveC(source)
    }

    public static func _conditionallyBridgeFromObjectiveC(_ source: allshared.__ListshopConnectionStatus, result: inout allshared.ListshopConnectionStatus?) -> Swift.Bool {
        result = fromObjectiveC(source)
        return true
    }

    public static func _unconditionallyBridgeFromObjectiveC(_ source: allshared.__ListshopConnectionStatus?) -> Self {
        return fromObjectiveC(source)
    }

    public func _bridgeToObjectiveC() -> allshared.__ListshopConnectionStatus {
        switch self {
        case .online: return allshared.__ListshopConnectionStatus.online as allshared.__ListshopConnectionStatus
        case .offline: return allshared.__ListshopConnectionStatus.offline as allshared.__ListshopConnectionStatus
        case .unknown: return allshared.__ListshopConnectionStatus.unknown as allshared.__ListshopConnectionStatus
        }
    }

    private static func fromObjectiveC(_ source: allshared.__ListshopConnectionStatus?) -> Self {
        guard let source = source else {
            fatalError("Couldn't map value of \(Swift.String(describing: source)) to allshared.ListshopConnectionStatus")
        }
        if source == allshared.__ListshopConnectionStatus.online as allshared.__ListshopConnectionStatus {
            return .online
        } else if source == allshared.__ListshopConnectionStatus.offline as allshared.__ListshopConnectionStatus {
            return .offline
        } else if source == allshared.__ListshopConnectionStatus.unknown as allshared.__ListshopConnectionStatus {
            return .unknown
        } else {
            fatalError("Couldn't map value of \(Swift.String(describing: source)) to allshared.__ListshopConnectionStatus")
        }
    }

    public typealias _ObjectiveCType = allshared.__ListshopConnectionStatus

}

extension allshared.ListshopConnectionStatus {

    public func toKotlinEnum() -> allshared.__ListshopConnectionStatus {
        return _bridgeToObjectiveC()
    }

}

extension allshared.__ListshopConnectionStatus {

    public func toSwiftEnum() -> allshared.ListshopConnectionStatus {
        return allshared.ListshopConnectionStatus._unconditionallyBridgeFromObjectiveC(self)
    }

}
