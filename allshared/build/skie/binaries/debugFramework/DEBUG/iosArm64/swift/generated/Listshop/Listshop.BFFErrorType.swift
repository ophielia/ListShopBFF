// Generated by Touchlab SKIE 0.10.0

import Foundation

@frozen
public enum ListshopBFFErrorType : Swift.Hashable, Swift.CaseIterable, Swift._ObjectiveCBridgeable {

    case api
    case authentication
    case unknown

    public var name: Swift.String {
        return (self as _ObjectiveCType).name
    }

    public var ordinal: Swift.Int32 {
        return (self as _ObjectiveCType).ordinal
    }

    public static func _forceBridgeFromObjectiveC(_ source: allshared.__ListshopBFFErrorType, result: inout allshared.ListshopBFFErrorType?) -> Swift.Void {
        result = fromObjectiveC(source)
    }

    public static func _conditionallyBridgeFromObjectiveC(_ source: allshared.__ListshopBFFErrorType, result: inout allshared.ListshopBFFErrorType?) -> Swift.Bool {
        result = fromObjectiveC(source)
        return true
    }

    public static func _unconditionallyBridgeFromObjectiveC(_ source: allshared.__ListshopBFFErrorType?) -> Self {
        return fromObjectiveC(source)
    }

    public func _bridgeToObjectiveC() -> allshared.__ListshopBFFErrorType {
        switch self {
        case .api: return allshared.__ListshopBFFErrorType.api as allshared.__ListshopBFFErrorType
        case .authentication: return allshared.__ListshopBFFErrorType.authentication as allshared.__ListshopBFFErrorType
        case .unknown: return allshared.__ListshopBFFErrorType.unknown as allshared.__ListshopBFFErrorType
        }
    }

    private static func fromObjectiveC(_ source: allshared.__ListshopBFFErrorType?) -> Self {
        guard let source = source else {
            fatalError("Couldn't map value of \(Swift.String(describing: source)) to allshared.ListshopBFFErrorType")
        }
        if source == allshared.__ListshopBFFErrorType.api as allshared.__ListshopBFFErrorType {
            return .api
        } else if source == allshared.__ListshopBFFErrorType.authentication as allshared.__ListshopBFFErrorType {
            return .authentication
        } else if source == allshared.__ListshopBFFErrorType.unknown as allshared.__ListshopBFFErrorType {
            return .unknown
        } else {
            fatalError("Couldn't map value of \(Swift.String(describing: source)) to allshared.__ListshopBFFErrorType")
        }
    }

    public typealias _ObjectiveCType = allshared.__ListshopBFFErrorType

}

extension allshared.ListshopBFFErrorType {

    public func toKotlinEnum() -> allshared.__ListshopBFFErrorType {
        return _bridgeToObjectiveC()
    }

}

extension allshared.__ListshopBFFErrorType {

    public func toSwiftEnum() -> allshared.ListshopBFFErrorType {
        return allshared.ListshopBFFErrorType._unconditionallyBridgeFromObjectiveC(self)
    }

}
